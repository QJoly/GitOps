{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"GitOps","text":"<p>Bienvenue sur la documentation de mon projet GitOps me permettant de d\u00e9ployer mon infrastructure automatiquement.</p>"},{"location":"dep/","title":"Installer les d\u00e9pendances","text":"<ul> <li>pre-commit</li> <li>yq </li> <li>taskfile</li> <li>flux</li> </ul>"},{"location":"dep/#installation-de-terraform","title":"Installation de Terraform","text":"<p>Le d\u00e9tail de l'installation est disponible sur le site officiel de Hashicorp (lien ici)</p>"},{"location":"dep/#ubuntu-debian","title":"Ubuntu / Debian","text":"<pre><code>wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg\necho \"deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/hashicorp.list\nsudo apt update &amp;&amp; sudo apt install terraform\n</code></pre>"},{"location":"dep/#linux","title":"Linux","text":"<pre><code>wget https://releases.hashicorp.com/terraform/1.4.2/terraform_1.4.2_linux_amd64.zip -O- | gunzip -c - &gt; terraform\nchmod +x ./terraform\nmkdir -p ~/.local/bin\nmv ./terraform ~/.local/bin/terraform\nexport PATH=$PATH:~/.local/bin/\n</code></pre> <p>Pour v\u00e9rifier que Terraform est bien install\u00e9, lancez la commande <code>terraform -version</code>.</p>"},{"location":"dep/#installation-de-packer","title":"Installation de Packer","text":"<p>Le d\u00e9tail de l'installation est disponible sur le site officiel de Hashicorp (lien ici)</p>"},{"location":"dep/#ubuntu-debian_1","title":"Ubuntu / Debian","text":"<pre><code>wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg\necho \"deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/hashicorp.list\nsudo apt update &amp;&amp; sudo apt install packer\n</code></pre>"},{"location":"dep/#linux_1","title":"Linux","text":"<pre><code>wget https://releases.hashicorp.com/packer/1.8.6/packer_1.8.6_linux_amd64.zip -O- | gunzip -c - &gt; terraform\nchmod +x ./packer\nmkdir -p ~/.local/bin\nmv ./packer ~/.local/bin/packer\nexport PATH=$PATH:~/.local/bin/\n</code></pre> <p>Pour v\u00e9rifiez que Packer est bien install\u00e9, lancez la commande <code>packer -version</code>.</p>"},{"location":"dep/#j2cli","title":"J2Cli","text":"<p>j2cli est la version 'ligne de commande' de l'outil Jinja2 permettant de cr\u00e9er des contenus dynamiques dans des fichiers textuels. Dans le projet <code>GitOps</code>, nous l'utilisons pour faire du remplacement dans les fichiers <code>preseed.cfg</code> durant l'installation de Debian.</p>"},{"location":"dep/#linux_2","title":"Linux","text":"<p>Il sera n\u00e9c\u00e9ssaire d'avoir Python3 et Pip install\u00e9 sur votre syst\u00e8me. Si ce n'est pas le cas, je vous invite \u00e0 consulter cette page.</p> <pre><code>python3 -m pip install j2cli\nexport PATH=$PATH:~/.local/bin/\n</code></pre> <p>Pour v\u00e9rifier que j2cli est bien install\u00e9, lancez la commande <code>j2 -v</code>.</p>"},{"location":"dep/#sops","title":"SOPS","text":"<pre><code>wget https://github.com/mozilla/sops/releases/download/v3.7.3/sops-v3.7.3.linux -O- | gunzip -c - &gt; sops\nchmod +x ./sops\nmkdir -p ~/.local/bin\nmv ./sops ~/.local/bin/sops\nexport PATH=$PATH:~/.local/bin/\n</code></pre>"},{"location":"libvirt/","title":"Utiliser Libvirt sans les permissions root","text":"<p>Le module Terraform Libvirt n'est utilisable que via l'URI <code>qemu:///system</code> (Je souhaite r\u00e9soudre ce probl\u00e8me au plus vite mais j'ai l'impression qu'il manque quelque chose au provider\u2026). Si vous souhaitez lancer ce projet via un utilisateur non-root, il est imp\u00e9ratif de rendre le socket Qemu disponible pour votre utilisateur.</p> <p>Je vous recommande donc de modifier la configuration de Libvirt <code>/etc/libvirt/libvirtd.conf</code> afin que la valeur <code>unix_sock_group</code> soit d\u00e9finie \u00e0 <code>libvirt</code>. Cr\u00e9ez ensuite le groupe nomm\u00e9 <code>libvirt</code> via la commande <code>addgroup libvirt</code>. </p> <p>Ensuite, ajoutez votre propre utilisateur \u00e0 ce nouveau groupe <code>sudo usermod -a -G libvirt $(whoami)</code>. </p> <p>Une fois le service <code>libvirtd</code> red\u00e9marr\u00e9, vous pourrez tester l'acc\u00e8s au socket via la commande <code>virsh -c qemu:///system list</code>.</p>"},{"location":"proxmox/","title":"Configurer Proxmox","text":"<p>todo</p>"},{"location":"sops/","title":"Chiffrer vos secrets","text":"<p>todo</p>"},{"location":"start/","title":"Lancement du projet","text":"<p>todo</p>"}]}