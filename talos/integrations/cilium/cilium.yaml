---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVAvK2ZvSzB5RzZjUXdwWVBxcEIyY0V3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRJeU1qQTJOVFUxT1ZvWERUSTJNVEl5TVRBMgpOVFUxT1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1WkxJeFdvaVVFdmNkdjRSWDA4QzlMYWxvNERFUFZEY1FIZHQyclFRaHZxMGU0eTYKcEF1QVZaOGRWS3k1RlJ1djJ3SVZOcWU5NjdsQzVTMEYzSjZFN0NCZkRzaHVmVzgzZ3RscnRESG1Dakt4YVVrZQpwSnFCWklTeWtvbjc2bVV0NlJKcVQ2V2txWmdNMjdWblBIa1lRdTZaZ00ySkpnMkhCZ2tBN3Vmdmxvc0JOTFdMCmN2Mkh5RVR2ei9CN0pnM1QvcVBHRUplTTV3RVdCUnRneHhjRlo4ZnJHeUpKNmVtKytUS2w1MHFuTDBSeUVwNlEKdXFjbmMveGt2L0lEUENXMklsK3Z2bjlOcnVVREdmQjNFZWd6SjlhY1dqVTZiYlJmYmM5SDd6V05BSmhNNmZTTApmdnhmSjVnSDV1TUptM3M2QmI4ZERRN3M0VWNhTWE1ZkVIWmZFUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQWZjamtvYkNYYmtKbnRRYm1FTjV4TGNLR1oyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRGsxaFJRdU5nSjA0KzBoSStxY0VUcEVwLzNxbmZYR3BxOXJNRGp4UjBkOG5LcndiS1Q2M3M4CmVXckQzQjl4L1ZlMk5TQ1hLMnpPUDBxYmYzbndsTlFnSTJ1WVMvNmg1M1VTM1NyQVZDV2NBU0RNOGlIMmpMK2UKR1YxVVl4ZVdzZVZzRFdJTXAvcElKNGJVNkx4Qm9MTldiRWk2MStTZzIvNnZKdk9MSGI4VGZKcFJzZnVHNmY2NgpUUStzYStnSDZXeWtGUkVnUS9oTzlXT0djQTBKVmdQRFlCKzZTRUovQXJ2ME5uNmJ5K0hvb3hjejIrMTR0TUhpCjI4ME5PblZCMG1PSTN6WlhYT0RhRXgyZFgrRmcrS1RJODRGUzVrYWJIZC9id1lnK3FPb1VnTmlmMWViNTdKckEKZi9MUTdaSnlBNUhVWUM2ajJTSFA1MzJkeDBmaGROVVQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNVpMSXhXb2lVRXZjZHY0UlgwOEM5TGFsbzRERVBWRGNRSGR0MnJRUWh2cTBlNHk2CnBBdUFWWjhkVkt5NUZSdXYyd0lWTnFlOTY3bEM1UzBGM0o2RTdDQmZEc2h1Zlc4M2d0bHJ0REhtQ2pLeGFVa2UKcEpxQlpJU3lrb243Nm1VdDZSSnFUNldrcVpnTTI3Vm5QSGtZUXU2WmdNMkpKZzJIQmdrQTd1ZnZsb3NCTkxXTApjdjJIeUVUdnovQjdKZzNUL3FQR0VKZU01d0VXQlJ0Z3h4Y0ZaOGZyR3lKSjZlbSsrVEtsNTBxbkwwUnlFcDZRCnVxY25jL3hrdi9JRFBDVzJJbCt2dm45TnJ1VURHZkIzRWVneko5YWNXalU2YmJSZmJjOUg3eldOQUpoTTZmU0wKZnZ4Zko1Z0g1dU1KbTNzNkJiOGREUTdzNFVjYU1hNWZFSFpmRVFJREFRQUJBb0lCQVFDZVl1SFBpY1Q0dnczdwpycU1QclhSdG55R3lKMkc4cCsvOUxpaUZiaHZFOUd6V25LWWNEYTlSNDBBYUxqeFhPczNkL0pia0tXQ1hwQzVwCjdPRVJiL0JtOUlLQXNYbkJZcHphMHVSQzR2WkI3TzJIcFNIV0VKN2EyYzVWMllzTEVSbFdweFRmdEhsaFpIemkKakVvWVo3ZDhYaDlieFBJdFpjSFZRUnI2dU53TWNMWW16SWs2Z3VFV1VCay9FVERUWi91Q0tBSUZmbk1HUXA3MQpCU2l6bU53aExsTC9aLzRJZUFRcC9XNzZmakpqY1orS0tJbWhJSTNUb2dKQWR2R2p5cC9IbWNmcFBJRUV2cXJ6CmMrRlVTWHZPc3VXRW94WVFJTzVCMDNIRFlqNC9sRUsyQjFScUFMYWpkTXVOQWJMU1pDbCt3WGplMDJ0UjI5Y1cKTFFaZ2hsek5Bb0dCQVBjRTliZ1l5Z1pRZmdVMStzbW4vQjI2eXVjVU01TnQxWGtISURKRkZmbDY4Y3d5VE5yaApyOS9uMkorUFU1M2ZEVDltUTdGaXFOMWVDa0c5OGYwSGpVZjdWb2JQem12THVMNUR5bjVRQWNuQ3pvRXFuQ09ZCnZqdjBDN01wM3RlZSs5UE1ZdWxSSFR1NkxvSVVBUWVzRUJiTWZQU1FJRXI3b0xuQzl2aFJwdkw3QW9HQkFPM3IKYzh4Y0ZnS0VYaTQ1dDZQanJBVXE2TlNzUUEySTdIRmhpY3lkdEV2WFpldEpVVEYvSmFOVjJkRjhNRDBVNFNaQQpudjh5K2FXZW5pMlI4NExRQzV5SjVOcHhOZ0NISVZUNlROU0QybC9FdkVKTThKeVFNdEIya1JYbFRMd0VtZkRNCnFUWnFZUVJ1KzlYL0d5WFdJSTRLVlZOYUkzWlNiZzJUdWlxM0pyaGpBb0dCQUlTWVlmblhQS0tWRklCaGtHUXMKeXZWK2Jpb0tPd0U1Wk95WmVadmlYOEJTVVhjRnpTRjFJZjR6cXFGRHcyT3I5cVdBbEhla2VQYVM0emlVNkUrbApmUjRWZVVYV1NIeXVsMVZ5ZUVERFc2SmM4cEo5TitFWHZZM2JHMmlwNGhlbUhKRjlWZDdlRHE0ZjY1VWhmY2dMCmdYdHJldXVnYmVVeUd2MTcvU3dnVUZoL0FvR0FIanUxVTFyQVVVR1Exajd2WHh3blYrREVCWUorQVRwTkVYdGIKajJ6YTVHaFN3enRsM2V4U1ZCY3N2cm9SUnpISUNweGJtQUphUnZtSkVERmp5Rk8zcGdTLzJDSmF3bVpwamVyZwpxSUM0MTBLZ3lhd05SMWZyblNIei9keE5pL2JwdVBmSTZPbEx1c3gvcEFudTRUZjhteEFsRjVwMHR5eHlYN2RPCkNPK05OQkVDZ1lBd1FXZ0cyZjdKK1VpNVB3NGNFNEFwOEFQaXNHWlVpektlOVhpcEVaSXVkaVY0OVBIT2pUZG8KdW4vQU1XT3NIdXBBSnRLajAxVFk5eUZFODlhODlVdzVIL1lZZ2F0RjQ0ZW1ZOTczLzRqOGtkam5RbWtqUTAxeQp3TjVmMWZGM1lmbFU5L1BYR0FVc3NEUnJuaHJXcjFhNGpWS0tWYWdhNzNwWHVLTm1ncFJpREE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVAvK2ZvSzB5RzZjUXdwWVBxcEIyY0V3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRJeU1qQTJOVFUxT1ZvWERUSTJNVEl5TVRBMgpOVFUxT1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1WkxJeFdvaVVFdmNkdjRSWDA4QzlMYWxvNERFUFZEY1FIZHQyclFRaHZxMGU0eTYKcEF1QVZaOGRWS3k1RlJ1djJ3SVZOcWU5NjdsQzVTMEYzSjZFN0NCZkRzaHVmVzgzZ3RscnRESG1Dakt4YVVrZQpwSnFCWklTeWtvbjc2bVV0NlJKcVQ2V2txWmdNMjdWblBIa1lRdTZaZ00ySkpnMkhCZ2tBN3Vmdmxvc0JOTFdMCmN2Mkh5RVR2ei9CN0pnM1QvcVBHRUplTTV3RVdCUnRneHhjRlo4ZnJHeUpKNmVtKytUS2w1MHFuTDBSeUVwNlEKdXFjbmMveGt2L0lEUENXMklsK3Z2bjlOcnVVREdmQjNFZWd6SjlhY1dqVTZiYlJmYmM5SDd6V05BSmhNNmZTTApmdnhmSjVnSDV1TUptM3M2QmI4ZERRN3M0VWNhTWE1ZkVIWmZFUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQWZjamtvYkNYYmtKbnRRYm1FTjV4TGNLR1oyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRGsxaFJRdU5nSjA0KzBoSStxY0VUcEVwLzNxbmZYR3BxOXJNRGp4UjBkOG5LcndiS1Q2M3M4CmVXckQzQjl4L1ZlMk5TQ1hLMnpPUDBxYmYzbndsTlFnSTJ1WVMvNmg1M1VTM1NyQVZDV2NBU0RNOGlIMmpMK2UKR1YxVVl4ZVdzZVZzRFdJTXAvcElKNGJVNkx4Qm9MTldiRWk2MStTZzIvNnZKdk9MSGI4VGZKcFJzZnVHNmY2NgpUUStzYStnSDZXeWtGUkVnUS9oTzlXT0djQTBKVmdQRFlCKzZTRUovQXJ2ME5uNmJ5K0hvb3hjejIrMTR0TUhpCjI4ME5PblZCMG1PSTN6WlhYT0RhRXgyZFgrRmcrS1RJODRGUzVrYWJIZC9id1lnK3FPb1VnTmlmMWViNTdKckEKZi9MUTdaSnlBNUhVWUM2ajJTSFA1MzJkeDBmaGROVVQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRYXNpMk1FUjBDNHo1MktqcUFIdmNTREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TWpJeU1EWTFOakF3V2hjTk1qWXhNakl4TURZMQpOakF3V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETjFWRGFjU1crcjM1VG42UHNaUTgxN0FhOEk1cWkKUDdLcmJsd1UwNXdGaGZkMnBqNHpLaldQR1JUWTJtV1NaeWtDbWNSSkpwNE1teCtlaFNuZWxBUDVUbnlhT0N4dwpzcXMvY2syQWRhYW1TUDJveTZLaFJpTnJJdnRlcFRjOGJGMWNsZGJrZ0ZsL1BjTm1zbVdvSGgwamVOSXBEVDNOCjVtbDBrYUpvbHJsQ2VJODdhRU5EOUJiN0RxeVRyMjI0d2lhcWFsc2JMYi95SlRVV09UUlRqVWpVd210VGM2eEIKS3dHc0JWZU1LS09jSXR4NnFtVGZBR0lSNllCWDRPY1FHOEpBUmNKNjFTZnFBY0paOHZYTEZCVUIxZS8xanRjUQpud1FaOExHYi9DdW16Ris3UVVNZVlOdUVWTXkyWUFQM0tzWmNRWFV0U2xyMXpiaGF5NG1mRmxpNUFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZBZmNqa29iQ1hia0pudFFibUVONXhMYwpLR1oyTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFXeEpvanpHRzNGQTFlRUg1ckxrRVJWWHRqVC9qdVJ5WDVrVGw3cTU1czdTSXc4VlAKOEZ1S01KMXM3emNma0VzbjJabW9xVldCWHJjbHRJNTVOM2JZZ3k5OEtIZ05zZkJ3d2RPMmNhOFJJbm9Pbzk3QwphVmY4RFEyNXBvWURaSy9FczA0Q3pwc1Jkalg5YkdPK1BqcS9yNTg5QStyMk9lSFpOLzA2TGU3UWhQeDQyYjQwClV6T0xPdmE4Y24vOXEzK1VDL25PVi9FVzJnT2tVVFRrWDdDbXZsQytScW03WkY5UUpMcTAwcnh1WHFDMEhXeHMKbUg1b2JiTmVzSHNhWUpCM3ZDYkF5RDRPcVF3WDAwNTlBejB1RlhnNnNPTTFCNVhoZ083U3pMV2ttNjZFNmlhNgpBWG9aZXR2V2lpbWlMOCswSUI1RDRiRlhvMkpoaERvdFZsNEg1QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBemRWUTJuRWx2cTkrVTUrajdHVVBOZXdHdkNPYW9qK3lxMjVjRk5PY0JZWDNkcVkrCk15bzFqeGtVMk5wbGttY3BBcG5FU1NhZURKc2Zub1VwM3BRRCtVNThtamdzY0xLclAzSk5nSFdtcGtqOXFNdWkKb1VZamF5TDdYcVUzUEd4ZFhKWFc1SUJaZnozRFpySmxxQjRkSTNqU0tRMDl6ZVpwZEpHaWFKYTVRbmlQTzJoRApRL1FXK3c2c2s2OXR1TUltcW1wYkd5Mi84aVUxRmprMFU0MUkxTUpyVTNPc1FTc0JyQVZYakNpam5DTGNlcXBrCjN3QmlFZW1BVitEbkVCdkNRRVhDZXRVbjZnSENXZkwxeXhRVkFkWHY5WTdYRUo4RUdmQ3htL3dycHN4ZnUwRkQKSG1EYmhGVE10bUFEOXlyR1hFRjFMVXBhOWMyNFdzdUpueFpZdVFJREFRQUJBb0lCQVFDSG5DVWE1alVCL3NseAordG1iSTdIenlyOWRNTy91T1oxVGlQQXQ0SVVJdG95bHBUMlJwQnVKWGZMNE5GdDdLM0EvZ0dOcjluOW11c1VJClFaK21QMHFtOUdqdmlsYnRJU25tTVQ2U2hmRDMyVnNWM0tRWE1RaWd5M2xsaitCbWROYkY2d3FiblZ4WmtxMnMKZVppMFBMTGg3Zlk0aWJyUWJ4L0haelBqU0hwaUtiQ2U3d2RrUzJPN0JzL2I3TUdNcGMwVDFBWkNkOGZHbUNERApKTEt1bFV3bWpUVlBPUTEzTFk2WGhoQzhYUC9MOEpFKzNFVUVjclIwblJqNnZPWjd3R2JnaXBpYkJkaWtOQndXCkh1NGJmYWY4elFMNHZaRnNUbjlvN2U3MVJwTDZSV0FESURkaUFvM04xRElmNnFOc3Y3Y0F4WmNBOExheEc1SEcKZ05CaXZ0K2hBb0dCQVBiUkFEN0FZMllKcVROeXlWbnZQMFZsNjhRd0haaFdvNExaWGdYbXdpUTBFNk1UZmtXVwpJOUM1OGFlajhyVHJLT21VZGRGQTk3TDk1QnB5elFhK0QrNDRwRjhuWlE2U1BtdVBVTS8wQ3lIMXVQZEtXT0l6Cm54amswSGgycytZblNoTDBiOVVjSDF4TmcwMElWWFVxTmtvQytpdE94OTFZNEVMRjdYaDV5WmNsQW9HQkFOVjkKOERjbXNJZUxhbEZhVDUyYVpFL2JQOG9rTWJZS3ppdnRmcGlSdUJoTzV4V1ZuaXVhUVVYQy9ENFhyZXZqSlJyQgp5dXh0dlFaemdPTjFnZWtGTTZyQ1BiMUZNYUkwMERvU0F3bUxhQis1b3JmRm80akhnMzdna2phN04xeFJ5M01XCkpXRnRIcG1xdEp6NjQwQzRVOUFURFhKMG9kNXNBQmc4VzA0RHprRUZBb0dCQU9sRUlGb3VWQU1VOEdBYWhXaEYKTUdRemJuOE9CbnA2cjdDMEpTT29zeVdxUGtEcTVIVjU3OEdPYTNESUIxT3J5US94YXVSbzVYRzZlUUh5TEFuSwpTWjRZMUdqRi84R2t2Ky9DRkZ0bHg3dkIwNTJNRzdNMW5KRFhlSnZSZkRieVBSVHJCbUxBWUhkSkh1WUlFVlJaCm45T1ZPc0VCaE8yUzJPaml6WXdHZGxzdEFvR0FEenFybnhPSWRqTFF3N3JnZ1FxWmEwVGxtUUxaOVBWeVhablUKZFFlNERTdmJ1aU54SkFVZDhOOEc1VnNGRWhXaStQU29DQk9QNzF6ZjdkbmRDWVZRZVRiZjlwZHdBZlVvZ1d2MQpnWUhMVExBT1ZuT254Y01OczBoTHhkRzNFa1BYY244NjdXYytUcEhwem1UclB4dW5CdW5GQk13akc5MnlhQWd1Ckx6T0FUQTBDZ1lBVHE0ZlpwQlJCWHdVZSs4OGhOMkduUlp3VTRXVGZlN1RuQTBGRkFaZ0pHSElYeWpJNUt1RTIKSzg5VmZOMjdjVWkrM2h1a2VWUHkxKy9CS1J2dHNMWDJRdm5FNGN4c0xHdENDajZ1eTJVc0tIbmoyTG9iYnlzdgo2NGkxYW5QdXRidW8zVmFSZVhRQ3lEODd4ZGhGbGwrNHN1K21ZTkppdGpRbjRyRVpJZjJGTkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVAvK2ZvSzB5RzZjUXdwWVBxcEIyY0V3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRJeU1qQTJOVFUxT1ZvWERUSTJNVEl5TVRBMgpOVFUxT1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1WkxJeFdvaVVFdmNkdjRSWDA4QzlMYWxvNERFUFZEY1FIZHQyclFRaHZxMGU0eTYKcEF1QVZaOGRWS3k1RlJ1djJ3SVZOcWU5NjdsQzVTMEYzSjZFN0NCZkRzaHVmVzgzZ3RscnRESG1Dakt4YVVrZQpwSnFCWklTeWtvbjc2bVV0NlJKcVQ2V2txWmdNMjdWblBIa1lRdTZaZ00ySkpnMkhCZ2tBN3Vmdmxvc0JOTFdMCmN2Mkh5RVR2ei9CN0pnM1QvcVBHRUplTTV3RVdCUnRneHhjRlo4ZnJHeUpKNmVtKytUS2w1MHFuTDBSeUVwNlEKdXFjbmMveGt2L0lEUENXMklsK3Z2bjlOcnVVREdmQjNFZWd6SjlhY1dqVTZiYlJmYmM5SDd6V05BSmhNNmZTTApmdnhmSjVnSDV1TUptM3M2QmI4ZERRN3M0VWNhTWE1ZkVIWmZFUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQWZjamtvYkNYYmtKbnRRYm1FTjV4TGNLR1oyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRGsxaFJRdU5nSjA0KzBoSStxY0VUcEVwLzNxbmZYR3BxOXJNRGp4UjBkOG5LcndiS1Q2M3M4CmVXckQzQjl4L1ZlMk5TQ1hLMnpPUDBxYmYzbndsTlFnSTJ1WVMvNmg1M1VTM1NyQVZDV2NBU0RNOGlIMmpMK2UKR1YxVVl4ZVdzZVZzRFdJTXAvcElKNGJVNkx4Qm9MTldiRWk2MStTZzIvNnZKdk9MSGI4VGZKcFJzZnVHNmY2NgpUUStzYStnSDZXeWtGUkVnUS9oTzlXT0djQTBKVmdQRFlCKzZTRUovQXJ2ME5uNmJ5K0hvb3hjejIrMTR0TUhpCjI4ME5PblZCMG1PSTN6WlhYT0RhRXgyZFgrRmcrS1RJODRGUzVrYWJIZC9id1lnK3FPb1VnTmlmMWViNTdKckEKZi9MUTdaSnlBNUhVWUM2ajJTSFA1MzJkeDBmaGROVVQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQVA2dU4zdHI1WHY4ZGdkMnBIbmdpNGN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRJeU1qQTJOVFl3TUZvWERUSTJNVEl5TVRBMgpOVFl3TUZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1Rd3g3ODBpTmRmYi9pUWhadWoKcHNLS3JPZWxSbkMvK2cwYmwwSVJkWVBmTk5YY1ZxRzUrcGxweUFYWTZCKzdmajcvWlFadXVTbzhUUzdjLy9BVApNYW1sem5ud0pyWXExZWVIWDZpci9VS0J5OEowTTVqMDEwcVREL3FncEFJeVdyTjQ5Q0p2cXU1RjlTWnFxbHJvCmFpc3d2VHFBNVE4OGtIaHF1d0VlQkRWdmpLY0YxOGxsSFZLTnFaa0pFZ3p4VWg0VmViSmo0LzJoY2VLb0k4eFgKcE81RitVblI1c3RqYUs3eVNPeEFTWlVYeEo4ZTlDM1BNMW5ka0g2cFNrcnE1K2Q0MTVhWlhFbmFoVVlEdkZhUApEMytKbWl2SmdQeXhLTnErM2RMZjhUbXRSNWlORXBXOU9SMVN5TVhjNEt2cWVKdlVKbHRIZFljeEc2UWRna1AwCnMyRUNBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUI5eU9TaHNKZHVRbQplMUJ1WVEzbkV0d29abll3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVlyVkFwUGRiSFliMzF2dXlEOFJ4MFpxMkZkS3oKWjVvSHdpU0hSR1N0NzBlTjZtVFZsaEN1bkwxMEQzMTFxR3FWUDlFa2NLOG9pTkpoVDVsS2o2MTF5cEJmSVhwYwp2ZWJHZGZQa050aGFXZ2ZnYzVMMFZlTnNpZUhNbWNsQTU1SEhId0cyZEtpTmFzWStoN0ZBSG01dUlzYmozaVIzClRYdVNBcTJKNk56YW9BU0hHNnpVTEFIUUdSSmNtYWdBY1ZHVVlZTExZYjRuUXJzM3p3VFhlOTZ3UmJYcnR1MmYKSmMzK1c0aWkzWm1vUGlFdFRJakg4ZisrTzlhaTFlNUtJS2xRb0c3OHV0RVVRbm9zNHozWElIdUhBWGRxZVZWZwpYUDlzQkFRa1dSQWJSbjdIRVhaY1BtVjIxQ3Y2M0U2b2VSQ2pOR0x1eFZxNnRKTWo0NFFUbVFXMGxRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeERESHZ6U0kxMTl2K0pDRm02T213b3FzNTZWR2NMLzZEUnVYUWhGMWc5ODAxZHhXCm9ibjZtV25JQmRqb0g3dCtQdjlsQm02NUtqeE5MdHovOEJNeHFhWE9lZkFtdGlyVjU0ZGZxS3Y5UW9ITHduUXoKbVBUWFNwTVArcUNrQWpKYXMzajBJbStxN2tYMUptcXFXdWhxS3pDOU9vRGxEenlRZUdxN0FSNEVOVytNcHdYWAp5V1VkVW8ycG1Ra1NEUEZTSGhWNXNtUGovYUZ4NHFnanpGZWs3a1g1U2RIbXkyTm9ydkpJN0VCSmxSZkVueDcwCkxjOHpXZDJRZnFsS1N1cm41M2pYbHBsY1NkcUZSZ084Vm84UGY0bWFLOG1BL0xFbzJyN2QwdC94T2ExSG1JMFMKbGIwNUhWTEl4ZHpncStwNG05UW1XMGQxaHpFYnBCMkNRL1N6WVFJREFRQUJBb0lCQVFDaUg2RmcrenU5cG9zegovOUc1RE9LSVR1cVZQam5ZZ0h4VkNxRFRJdlJXZGtRR0dsK29vN1JYeEZkYnBhUWtYTjcxbGoxWXRIVGxWeEY5CkVYbWFYWElqdS9YRlJGUHBJN3JCNmxkOVhpc2FJNEpLL1pXSjU0SmxpT09pZTg4c1ZZb29WMkovZG9IdEJ2aVAKdDROeFBqQkY0cS9zd1lrSUwwYy9pd3RmMy9zZ1g4eDExNXYrSFJxK2tkNnVRd2RXMmVlY0R1cGNlMC9IZjh5TQpCYzl0eVR5aDJhV0hTOVE3bmRhMTF6dERmY2pkdW1RM254dHYvdWRWbUdrMmIyQk1tVmxRTEVMQVBVN09uMStiCmNaZjN6cEhiSXp0c3I3SmlXejIyYWZMQkRyellidTFqSm1sRFpVZVdmZlU3TUxkeDdWdmZ2MTlXc0ZyQUNWR3QKd09uZE12WEJBb0dCQU9aWGtQcU9ORmtYajVRMndPQzdocUJYSWRIdlRRMFR5SldmaFlsdnliL2RpSnNIQ0M4aQpBVk9oNkNCRkZOUXRKYkh6MHBpSGlxME10NjNBR0x3REdITWtubFYxaXU2TzAyUkk4SkRBRnREL1hlNTZGeXhKCmk1b0wyQkU1V2dOdHVLZ0pqUk0zNTFtZVZsYmp3QWpEQWZDbG5nc25KcXh5WWpjTFUya2xINnlKQW9HQkFOb0wKV1g3aTZkSFhUQmVNV29rSVkyT1k5dzZJMlhRWGZQN25DLzNhUVpTRmpCZWFIT0c0YWlaUXdSTCt4bVRLL204dApLVnEwSHZLNkUvL3FXUnJKTTZFZ1U4UC9Xa045anA5WGtvSkhiVkpYWEt3ODlVWTJGMDQ5TXJ6VnkzYW01R3BOCnlzRmg0UkpGRVlBTjJOdFIxR1pXajRIdloxa1hsbHJNdnV6aFE0b1pBb0dBUGw0OWFpb3c4R0taeE1iaWlMY2QKNTdKUC9QanZndmYxV3RYN29VLzhiNC83V2dhWVo3S3NhMG11Z1haVEFuUksvWmtJVDdaN2pRbWhmbEZDSVQ0eApVNVA1cnlnSmV6aCs4bXR4ZjdBVFBYbTNwRWU0bUl3OVdYT1ZpR3hmL0Flc2RRdEpBSWdsZ3pXRktUZTNtbWU2CjBiNzJRUXpUd3VPaHhrZXh5UWw5UHdrQ2dZRUFqTUhVNVYrUXQrRDNneUFjOWVkUFdlVk9YN2lpUUJwRm03d0YKZHJ1bHFENUtBSmFCWEltVEpPYnVyTmVCdFdHQnZMMTN1OUVaUlhJd0pQM2d4YlRyT25ISEFYamZpVUFOaVBtYwpYN1BDYyt4bnE5eXlMY0FQYlhkK1FINzNtTUlHSkVYUnhPTHR5OENBbXB6VnlFZGNDVENKOWNSWmdCOEU5ZHJFCnllQmxuRWtDZ1lBNmNOa2VwYXNIWXBPbjR0NDRzelpoRzRYNEVMd09pdVpSeGFGRDBOWjA4SGVrYW1MTjl3cUsKUCtQdDBUbkc3NE9kNmZ3UXBIQkRTenNqZWJyWmRmOUQ4dWo4YnduTXZKS1Y4UzBtUS84WmlxMDBpNTAxTVNJbQpjaXJ4c0lpdDNFYzFiZENmNTI0UVRwYkozci83Zy94VmpZUk9VZVJLMU14NGxEMDNUR3Bocnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  ipam-cilium-node-update-rate: "15s"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  # Enable L2 announcements
  enable-l2-announcements: "true"
  l2-announcements-lease-duration: "24h"
  l2-announcements-renew-deadline: "60s"
  l2-announcements-retry-period: "60s"
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/sys/fs/cgroup"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        # Check for duplicate mounts before mounting
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.0@sha256:3014d4bcb8352f0ddef90fa3b5eb1bbf179b91024813a90a0066eb4517ba93c9"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.0@sha256:bfe6ef86a1c0f1c3e8b105735aa31db64bcea97dd4732db6d0448c55a3c8e70c"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
